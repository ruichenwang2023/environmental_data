points(y_2 ~ x, type = "l", lty = 2)
qnorm(c(0.05, 0.95))
qt(p = c(0.025, 0.975), df = 10)
for (i in 1:1000){
if (round(qt(p = 0.025, df = i),1) == -2.0){
print(i)
break}}
for (i in 1:1000){
if (round(qt(p = 0.025, df = i),2) == -1.96){
print(i)
break}}
require(here())
bird = read.csv(here("data","bird.sta.csv"))
habitat = read.csv(here("data", "hab.sta.csv"))
dat_all = merge(bird, habitat)
x_observed = c(2, 6)
print(x_observed)
dpois(x = 2, lambda = 4.5)
dpois(x = 6, lambda = 4.5)
#the likelihood of observing those particular counts together
dpois(x = 2, lambda = 4.5) * dpois(x = 6, lambda = 4.5)
#advantage of vectorization in R
wiwa_counts = c(2,6)
dpois(x = wiwa_counts, lambda = 4.5)
prod(dpois(x = wiwa_counts, lambda = 4.5))
#sum of log-likelihoods
sum(log(dpois(x = wiwa_counts, lambda = 4.5)))
summary(dat_all$WIWA)
hist(dat_all$WIWA, breaks = 7)
hist(dat_all$WIWA, breaks = 0:7)
0:7 - 0.5
hist(dat_all$WIWA, breaks = 0:7 - 0.5)
par(mfrow = c(1, 2))
dat = dat_all$WIWA
hist(dat, breaks = 0:(max(dat) + 1) - 0.5, main = "Histogram of\nWilson's Warbler counts")
dat = dat_all$GRJA
hist(dat, breaks = 0:(max(dat) + 1) - 0.5, main = "Histogram of\nGray Jay counts")
sum(log(dpois(x = wiwa_counts, lambda = 4.0)))
WIWR = dat_all$WIWR
summary(WIWR)
hist(WIWR, breaks = 0:(max(WIWR) + 1) - 0.5, main = "Histogram of\nWilson's Wrens counts")
sum(log(dpois(x = bird$WIWR, lambda = 1.5)))
sum(log(dbinom(WIWR, size = 7, prob = 0.21)))
max(WIWR)
mean(WIWR)
set.seed(1)
vec_rnorm = rnorm(n = 10, mean = 0, sd = 1)
log(dnorm(vec_rnorm, mean = 0, sd = 1))
sum(log(dnorm(vec_rnorm, mean = 0, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0.13, sd = 0.74))) # guess and check
require(palmerpenguins)
head(penguins)
dat_ade = droplevels(subset(penguins, species == "Adelie"))
hist(dat_ade$body_mass_g, main = "Adelie Penguins: Body Mass", xlab = "body mass (g)")
boxplot(dat_ade$body_mass_g ~ dat_ade$sex)
#female Adelie penguins have a body mass different from zero grams
dat_ade_f = droplevels(subset(dat_ade, sex == "female"))
t.test(dat_ade_f$body_mass_g,mu = 0)
#male Adelie penguins have a mean body mass greater than 4000 grams
dat_ade_m = droplevels(subset(dat_ade, sex == "male"))
t.test(dat_ade_m$body_mass_g, mu = 4000, alternative = "greater")
#two-sample t-test of the alternative hypothesis that male and female Adelie penguins have different mean body masses. Show your r-code.
t.test(x = dat_ade_m$body_mass_g, y = dat_ade_f$body_mass_g)
#two-sample (one-tailed) t-test of the directional alternative hypothesis that male Adelie penguins are heavier than females.
t.test(x = dat_ade_m$body_mass_g, y = dat_ade_f$body_mass_g, alternative = "greater")
#directional alternative hypothesis that male Adelie penguins are lighter than females
t.test(x = dat_ade_m$body_mass_g, y = dat_ade_f$body_mass_g, alternative = "l")
shapiro.test(residuals(iris$Sepal.Length))
?residual
?residuals
data(iris)
fit_species =
lm(
Sepal.Length ~ Species, data = iris
)
plot(
Sepal.Length ~ Species, data = iris,
xlab = "Species", ylab = "Sepal Length (cm)"
)
summary(fit_species)
shapiro.test(residuals(fit_species))
plot(
Petal.Width ~ Petal.Length, data = iris, xlab = "Petal Len", ylab = "Petal Wid"
)
fit_petals =
lm(
Petal.Length ~ Petal.Width, data = iris
)
summary(fit_petals)
plot(
Petal.Width ~ Petal.Length, data = iris, xlab = "Petal Len", ylab = "Petal Wid"
)
fit_petals =
lm(
Petal.Length ~ Petal.Width, data = iris
)
summary(fit_petals)
shapiro.test(residuals(fit_petals))
plot(
Petal.Width ~ Petal.Length, data = iris, xlab = "Petal Len", ylab = "Petal Wid"
)
fit_petals =
lm(
Petal.Width ~ Petal.Length, data = iris
)
summary(fit_petals)
shapiro.test(residuals(fit_petals))
0.415755 * 4 +-0.363076
?{.tabset}
?.tabset
?tabset
??tabset
knitr::opts_chunk$set(echo = TRUE)
head = read.csv(here("data","catrate.csv"))
require(here)
head = read.csv(here("data","catrate.csv"))
require(here)
catrate = read.csv(here("data","catrate.csv"))
head(catrate)
View(head)
knitr::opts_chunk$set(echo = TRUE)
require(here)
catrate = read.csv(here("data","catrate.csv"))
head(catrate)
summary(catrate)
plot(catrate$cat.rate)
hist(catrate$cat.rate)
hist(catrate$cat.rate, xlab = "Catastrophe Rate", ylab = "Frequency")
hist(catrate$cat.rate, main = "Histogram of Catastrophe Rates", xlab = "Catastrophe Rate", ylab = "Frequency")
hist(catrate$cat.rate, main = "Histogram of Catastrophe Rates", xlab = "Catastrophe Rate", ylab = "Frequency")
shapiro.test(catrate$cat.rate)
require(nortest)
install.packages(nortest)
require(nortest)
ad.test(catrate$cat.rate)
ad.test(catrate$cat.rate)
install.packages("nortest")
require("nortest")
ad.test(catrate$cat.rate)
lillie.test(catrate$cat.rate)
install.packages("nortest")
require("nortest")
ad.test(catrate$cat.rate)
lillie.test(catrate$cat.rate)
require("nortest")
ad.test(catrate$cat.rate)
lillie.test(catrate$cat.rate)
t.test(catrate$cat.rate, mu = 2/7)
t.test(catrate$cat.rate, mu = 2/4, alternative = "greater")
t.test(catrate$cat.rate, mu = 2/7, alternative = "greater")
wilcox.test(catrate$cat.rate, mu = 2/7)
require(here)
catrate = read.csv(here("data","catrate.csv"))
head(catrate)
summary(catrate)
penguin_dat = droplevels(subset(penduins, species != "Gentoo"))
penguin_dat = droplevels(subset(penguins, species != "Gentoo"))
require(palmerpenguins)
penguin_dat = droplevels(subset(penguin, species != "Gentoo"))
penguins
require(palmerpenguins)
penguin_dat = droplevels(subset(penguins, species != "Gentoo"))
#step 1: Numerical/Graphical Exploration
require(palmerpenguins)
penguin_dat = droplevels(subset(penguins, species != "Gentoo"))
#step 1: Numerical/Graphical Exploration
Summary(penguin_dat)
require(palmerpenguins)
penguin_dat = droplevels(subset(penguins, species != "Gentoo"))
#step 1: Numerical/Graphical Exploration
summary(penguin_dat)
boxplot(
flipper_length_mm ~ species,
data = penguin_dat,
ylab = "Flipper Length (mm)"
)
dat_adelie = subset(penguin_dat, species =="Adelie") # Extract the Adelie penguin data
shapiro.test(dat_adelie)
shapiro.test(dat_gentoo$flipper_length_mm)
dat_adelie = subset(penguin_dat, species =="Adelie") # Extract the Adelie penguin data
shapiro.test(dat_adelie$flipper_length_mm)
dat_chinstrap = subset(penguin_dat, species == "Chinstrap")
shapiro.test(dat_chinstrap$flipper_length_mm)
require(palmerpenguins)
penguin_dat = droplevels(subset(penguins, species != "Gentoo"))
#step 1: Numerical/Graphical Exploration
summary(penguin_dat)
boxplot(
flipper_length_mm ~ species,
data = penguin_dat,
ylab = "Flipper Length (mm)"
)
par(mfrow = c(1,2))
hist(dat_adelie)
par(mfrow = c(1,2))
hist(dat_adelie$flipper_length_mm, ylab = "Adelie Flipper Length (mm)")
hist(dat_chinstrap$flipper_length_mm, ylab = "Chinstrap Flipper Length (mm)")
hist(dat_chinstrap$flipper_length_mm, xlab = "Chinstrap Flipper Length (mm)")
par(mfrow = c(1,2))
hist(dat_adelie$flipper_length_mm, xlab = "Adelie Flipper Length (mm)")
hist(dat_chinstrap$flipper_length_mm, xlab = "Chinstrap Flipper Length (mm)")
par(mfrow = c(1,2))
hist(dat_adelie$flipper_length_mm,main = "Adelie", xlab = "Adelie Flipper Length (mm)")
hist(dat_chinstrap$flipper_length_mm, main = "Chinstrap", xlab = "Chinstrap Flipper Length (mm)")
par(mfrow = c(1,2))
hist(dat_adelie$flipper_length_mm,main = "Adelie", xlab = "Flipper Length (mm)")
hist(dat_chinstrap$flipper_length_mm, main = "Chinstrap", xlab = "Flipper Length (mm)")
par(mfrow = c(1,2))
hist(dat_adelie$flipper_length_mm,main = "Adelie", xlab = "Flipper Length (mm)", height = 10)
hist(dat_chinstrap$flipper_length_mm, main = "Chinstrap", xlab = "Flipper Length (mm)", height = 10)
par(mfrow = c(1,2))
hist(dat_adelie$flipper_length_mm,main = "Adelie", xlab = "Flipper Length (mm)")
hist(dat_chinstrap$flipper_length_mm, main = "Chinstrap", xlab = "Flipper Length (mm)")
t.test(flipper_length_mm ~ species)
t.test(flipper_length_mm ~ species, data = penguin_dat)
knitr::opts_chunk$set(echo = TRUE)
require("here")
require("here")
read.csv(here("data", "ginkgo_data_2022.csv"))
knitr::opts_chunk$set(echo = TRUE)
plot(x = ginkgo.dat$seeds_present, y = ginkgo.dat$petiole_length)
require("here")
ginkgo.dat = read.csv(here("data", "ginkgo_data_2022.csv"))
ginkgo.dat
plot(x = ginkgo.dat$seeds_present, y = ginkgo.dat$petiole_length)
boxplot(ginkgo.dat$petiole_length ~ ginkgo.dat$seeds_present)
knitr::opts_chunk$set(echo = TRUE)
dbinom(4,size = 6, prob = 0.6777)
pbinom(4, 6, 2/3, lower.tail = TRUE, log.p = FALSE)
1 - pbinom(3, 6, 2/3, lower.tail = TRUE, log.p = FALSE)
# Standard normal has mean = 0 and sd = 1
dnorm(0.5, mean = 0, sd = 1)
dnorm(1, mean = 0, sd = 1)
pnorm(0.5, mean = 0, sd = 1)
less_1 = pnorm(1, mean = 0, sd = 1)
less_2 = pnorm(2, mean = 0, sd = 1)
less_2 - less_1
# How many points?
n = 1000
# Create a vector of x-values from -4 to 4:
x = seq(from = -4, to = 4, length.out = n)
# Create the corresponding y-values:
y = dnorm(x, mean = 0, sd = 1)
y_2 = dnorm(x, mean = 0, sd = 2)
# plot!
plot(y ~ x, type = "l")
points(y_2 ~ x, type = "l", lty = 2)
qnorm(c(0.05, 0.95))
qt(p = c(0.025, 0.975), df = 10)
for (i in 1:1000){
if (round(qt(p = 0.025, df = i),1) == -2.0){
print(i)
break}}
for (i in 1:1000){
if (round(qt(p = 0.025, df = i),2) == -1.96){
print(i)
break}}
require(here())
bird = read.csv(here("data","bird.sta.csv"))
habitat = read.csv(here("data", "hab.sta.csv"))
dat_all = merge(bird, habitat)
x_observed = c(2, 6)
print(x_observed)
dpois(x = 2, lambda = 4.5)
dpois(x = 6, lambda = 4.5)
#the likelihood of observing those particular counts together
dpois(x = 2, lambda = 4.5) * dpois(x = 6, lambda = 4.5)
#advantage of vectorization in R
wiwa_counts = c(2,6)
dpois(x = wiwa_counts, lambda = 4.5)
prod(dpois(x = wiwa_counts, lambda = 4.5))
#sum of log-likelihoods
sum(log(dpois(x = wiwa_counts, lambda = 4.5)))
summary(dat_all$WIWA)
hist(dat_all$WIWA, breaks = 7)
hist(dat_all$WIWA, breaks = 0:7)
0:7 - 0.5
hist(dat_all$WIWA, breaks = 0:7 - 0.5)
par(mfrow = c(1, 2))
dat = dat_all$WIWA
hist(dat, breaks = 0:(max(dat) + 1) - 0.5, main = "Histogram of\nWilson's Warbler counts")
dat = dat_all$GRJA
hist(dat, breaks = 0:(max(dat) + 1) - 0.5, main = "Histogram of\nGray Jay counts")
sum(log(dpois(x = wiwa_counts, lambda = 4.0)))
WIWR = dat_all$WIWR
summary(WIWR)
hist(WIWR, breaks = 0:(max(WIWR) + 1) - 0.5, main = "Histogram of\nWilson's Wrens counts")
sum(log(dpois(x = bird$WIWR, lambda = 1.5)))
sum(log(dbinom(WIWR, size = 7, prob = 0.21)))
max(WIWR)
mean(WIWR)
set.seed(1)
vec_rnorm = rnorm(n = 10, mean = 0, sd = 1)
log(dnorm(vec_rnorm, mean = 0, sd = 1))
sum(log(dnorm(vec_rnorm, mean = 0, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0.13, sd = 0.74))) # guess and check
require(palmerpenguins)
head(penguins)
dat_ade = droplevels(subset(penguins, species == "Adelie"))
hist(dat_ade$body_mass_g, main = "Adelie Penguins: Body Mass", xlab = "body mass (g)")
boxplot(dat_ade$body_mass_g ~ dat_ade$sex)
#female Adelie penguins have a body mass different from zero grams
dat_ade_f = droplevels(subset(dat_ade, sex == "female"))
t.test(dat_ade_f$body_mass_g,mu = 0)
#male Adelie penguins have a mean body mass greater than 4000 grams
dat_ade_m = droplevels(subset(dat_ade, sex == "male"))
t.test(dat_ade_m$body_mass_g, mu = 4000, alternative = "greater")
#two-sample t-test of the alternative hypothesis that male and female Adelie penguins have different mean body masses. Show your r-code.
t.test(x = dat_ade_m$body_mass_g, y = dat_ade_f$body_mass_g)
#two-sample (one-tailed) t-test of the directional alternative hypothesis that male Adelie penguins are heavier than females.
t.test(x = dat_ade_m$body_mass_g, y = dat_ade_f$body_mass_g, alternative = "greater")
#directional alternative hypothesis that male Adelie penguins are lighter than females
t.test(x = dat_ade_m$body_mass_g, y = dat_ade_f$body_mass_g, alternative = "l")
data(iris)
fit_species =
lm(
Sepal.Length ~ Species, data = iris
)
plot(
Sepal.Length ~ Species, data = iris,
xlab = "Species", ylab = "Sepal Length (cm)"
)
summary(fit_species)
shapiro.test(residuals(fit_species))
plot(
Petal.Width ~ Petal.Length, data = iris, xlab = "Petal Len", ylab = "Petal Wid"
)
fit_petals =
lm(
Petal.Width ~ Petal.Length, data = iris
)
summary(fit_petals)
shapiro.test(residuals(fit_petals))
require("here")
ginkgo.dat = read.csv(here("data", "ginkgo_data_2022.csv"))
ginkgo.dat
knitr::opts_chunk$set(echo = TRUE)
t.test(subset(penguins, species == "Gentoo")$flipper_length_mm)
require(palmerpenguins)
t.test(subset(penguins, species == "Gentoo")$flipper_length_mm)
require(palmerpenguins)
t.test(subset(penguins, species == "Gentoo")$flipper_length_mm)
t.test(
x = subset(penguins, species == "Gentoo")$flipper_length_mm,
mu = 218
)
require(palmerpenguins)
t.test(subset(penguins, species == "Gentoo")$flipper_length_mm)
t.test(
x = subset(penguins, species == "Gentoo")$flipper_length_mm,
mu = 218
)
t.test(
x = subset(penguins, species == "Gentoo")$flipper_length_mm,
mu = 218,
alternative = "less"
)
knitr::opts_chunk$set(echo = TRUE)
require(palmerpenguins)
t.test(subset(penguins, species == "Gentoo")$flipper_length_mm)
t.test(
x = subset(penguins, species == "Gentoo")$flipper_length_mm,
mu = 218
)
t.test(
x = subset(penguins, species == "Gentoo")$flipper_length_mm,
mu = 218,
alternative = "less"
)
# 2-sample t-test
t.test(flipper_length_mm ~ species, data = subset(penguins, species != "Chinstrap"))
t.test(flipper_length_mm ~ species, data = subset(penguins, species != "Chinstrap"), alternative = "smaller")
t.test(flipper_length_mm ~ species, data = subset(penguins, species != "Chinstrap"), alternative = "less")
t.test(flipper_length_mm ~ species, data = subset(penguins, species != "Chinstrap"), alternative = "more")
t.test(flipper_length_mm ~ species, data = subset(penguins, species != "Chinstrap"), alternative = "greater")
t.test(flipper_length_mm ~ species, data = subset(penguins, species != "Chinstrap"), alternative = "less")
par(mfrow = c(1, 2))
hist(penguins$body_mass_g, breaks = 80, main = "histogram of body mass", xlab = "body mass (g)")
plot(density(penguins$body_mass_g, na.rm = TRUE), main = "density plot of body mass")
#explore normality using histograms and density plots
par(mfrow = c(1, 2))
hist(penguins$body_mass_g, breaks = 80, main = "histogram of body mass", xlab = "body mass (g)")
plot(density(penguins$body_mass_g, na.rm = TRUE), main = "density plot of body mass")
boxplot(body_mass_g ~ species, data = penguins)
boxplot(body_mass_g ~ species + sex, data = penguins)
boxplot(body_mass_g ~ sex + species, data = penguins)
boxplot(body_mass_g ~ species, data = penguins)
boxplot(body_mass_g ~ sex + species, data = penguins, names(female))
boxplot(body_mass_g ~ sex + species, data = penguins, names("female"))
boxplot(body_mass_g ~ sex + species, data = penguins, names("male"))
boxplot(body_mass_g ~ sex + species, data = penguins, names("malesklfjaphidsf"))
boxplot(body_mass_g ~ sex + species, data = penguins)
?names
names(islands)
names(boxplot(body_mass_g ~ sex + species, data = penguins))
names(sex + species)
boxplot(body_mass_g ~ sex + species, data = penguins)
boxplot(body_mass_g ~ sex + species, data = penguins,ylab = "Body Mass (g)")
boxplot(body_mass_g ~ sex + species, data = penguins,ylab = "Body Mass (g)", xlab = FALSE)
boxplot(body_mass_g ~ sex + species, data = penguins,ylab = "Body Mass (g)", xlab = None)
boxplot(body_mass_g ~ sex + species, data = penguins,ylab = "Body Mass (g)")
boxplot(body_mass_g ~ sex + species, data = penguins,ylab = "Body Mass (g)",xlab = names(c("female","male")))
?boxplot
ddf = structure(list(apple = c(1, 2, 3, 4, 5), banana = c(5, 4, 3,
2, 1), watermelon = c(4, 5, 6, 7, 8)), .Names = c("apple", "banana",
"watermelon"), row.names = c(NA, -5L), class = "data.frame")
View(ddf)
View(ddf)
xlabel=c("female\nAdelie")
boxplot(body_mass_g ~ sex + species, data = penguins,ylab = "Body Mass (g)",names = xlabel)
xlabel=c("female\nAdelie","2","3","4","5","6")
xlabel=c("female\nAdelie","2","3","4","5","6")
boxplot(body_mass_g ~ sex + species, data = penguins,ylab = "Body Mass (g)",names = xlabel)
xlabel=c("female\nAdelie","male\nAdelie","female\nChinstrap","male\nChinstrap","female\nGentoo","male\nGentoo")
boxplot(body_mass_g ~ sex + species, data = penguins,ylab = "Body Mass (g)",names = xlabel)
dat_chinstrap = subset(penguins, species == "Chinstrap")
mean(dat_chinstrap$body_mass_g, na.rm = TRUE)
dat_chinstrap = subset(penguins, species == "Chinstrap")
mean(dat_chinstrap$body_mass_g, na.rm = TRUE)
shapiro.test(dat_chinstrap$body_mass_g)
aggregate(body_mass_g ~ species, data = penguins, FUN = mean)
aggregate(
body_mass_g ~ species,
data = penguins,
FUN = function(x) shapiro.test(x)$p.value)
fit_species = lm(body_mass_g ~ species, data = penguins)
fit_species = lm(body_mass_g ~ species, data = penguins)
summary(fit_species)
anova(fit_species)
fit_species = lm(body_mass_g ~ species, data = penguins)
summary(fit_species)
anova(fit_species)
knitr::opts_chunk$set(echo = TRUE)
#whether Gentoo penguin flipper lengths are equal to 0 mm
require(palmerpenguins)
t.test(subset(penguins, species == "Gentoo")$flipper_length_mm)
#whether Gentoo penguin flipper lengths are equal to 218 mm
t.test(
x = subset(penguins, species == "Gentoo")$flipper_length_mm,
mu = 218
)
#whether Gentoo penguin flipper lengths are smaller than 218 mm
t.test(
x = subset(penguins, species == "Gentoo")$flipper_length_mm,
mu = 218,
alternative = "less"
)
# 2-sample t-test
t.test(flipper_length_mm ~ species, data = subset(penguins, species != "Chinstrap"))
#Adelie penguins have shorter than Gentoo penguins
t.test(flipper_length_mm ~ species, data = subset(penguins, species != "Chinstrap"), alternative = "less")
#explore normality using histograms and density plots
par(mfrow = c(1, 2))
hist(penguins$body_mass_g, breaks = 80, main = "histogram of body mass", xlab = "body mass (g)")
plot(density(penguins$body_mass_g, na.rm = TRUE), main = "density plot of body mass")
boxplot(body_mass_g ~ species, data = penguins)
dat_chinstrap = subset(penguins, species == "Chinstrap")
mean(dat_chinstrap$body_mass_g, na.rm = TRUE)
shapiro.test(dat_chinstrap$body_mass_g)
aggregate(body_mass_g ~ species, data = penguins, FUN = mean)
aggregate(
body_mass_g ~ species,
data = penguins,
FUN = function(x) shapiro.test(x)$p.value)
fit_species = lm(body_mass_g ~ species, data = penguins)
summary(fit_species)
anova(fit_species)
xlabel=c("female\nAdelie","male\nAdelie","female\nChinstrap","male\nChinstrap","female\nGentoo","male\nGentoo")
boxplot(body_mass_g ~ sex + species, data = penguins,ylab = "Body Mass (g)",names = xlabel)
boxplot(body_mass_g ~ species, data = penguins)
fit_additive = lm(body_mass_g ~ sex + species, data = penguins)
fit_additive = lm(body_mass_g ~ sex + species, data = penguins)
fit_additive = lm(body_mass_g ~ sex + species, data = penguins)
fit_additive
fit_interactive = lm(body_mass_g ~ sex * species, data = penguins)
fit_interactive
fit_interactive = lm(body_mass_g ~ sex * species, data = penguins)
fit_interactive
fit_interactive = lm(body_mass_g ~ sex * species, data = penguins)
anova(fit_interactive)
fit_interactive = lm(body_mass_g ~ sex * species, data = penguins)
summary(fit_interactive)
anova(fit_interactive)
fit_interactive = lm(body_mass_g ~ sex * species, data = penguins)
fit_interactive
summary(fit_interactive)
anova(fit_interactive)
fit_both = lm(body_mass_g ~ sex * species, data = penguins)#This line of code is the answer
#These are supplementary codes
fit_both
summary(fit_both)
anova(fit_both)
fit_both = lm(body_mass_g ~ sex * species, data = penguins)#This line of code is the answer
#These are supplementary codes
fit_both
summary(fit_both)
anova(fit_both)
fit_both = lm(body_mass_g ~ sex * species, data = penguins)#This line of code is the answer
#These are supplementary codes
fit_both
summary(fit_both)
anova(fit_both)
lm(bill_length_mm ~ body_mass_g, data = penguins)
fit_both = lm(body_mass_g ~ sex * species, data = penguins)#This line of code is the answer
summary(fit_both)
fit_additive = lm(body_mass_g ~ sex + species, data = penguins)
summary(fit_additive)
3372.39+26.92
fit_additive = lm(body_mass_g ~ sex + species, data = penguins)
summary(fit_additive)
aggregate(body_mass_g ~ sex*species, data = penguins, FUN = mean)
-1.7 + 0.043 * 10 + 0.192* 30 - 0.027 * 20
