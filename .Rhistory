par(mfrow = c(1, 2))
dat = dat_all$WIWA
hist(dat, breaks = 0:(max(dat) + 1) - 0.5, main = "Histogram of\nWilson's Warbler counts")
dat = dat_all$GRJA
hist(dat, breaks = 0:(max(dat) + 1) - 0.5, main = "Histogram of\nGray Jay counts")
sum(log(dpois(x = wiwa_counts, lambda = 4.0)))
WIWR = dat_all$WIWR
summary(WIWR)
hist(WIWR, breaks = 0:(max(WIWR) + 1) - 0.5, main = "Histogram of\nWilson's Wrens counts")
sum(log(dpois(x = bird$WIWR, lambda = 1.5)))
sum(log(dbinom(WIWR, size = 7, prob = 0.21)))
max(WIWR)
mean(WIWR)
set.seed(1)
vec_rnorm = rnorm(n = 10, mean = 0, sd = 1)
log(dnorm(vec_rnorm, mean = 0, sd = 1))
sum(log(dnorm(vec_rnorm, mean = 0, sd = 1)))
sum(log(dnorm(vec_rnorm, mean = 0.13, sd = 0.74))) # guess and check
require(palmerpenguins)
head(penguins)
dat_ade = droplevels(subset(penguins, species == "Adelie"))
hist(dat_ade$body_mass_g, main = "Adelie Penguins: Body Mass", xlab = "body mass (g)")
boxplot(dat_ade$body_mass_g ~ dat_ade$sex)
#female Adelie penguins have a body mass different from zero grams
dat_ade_f = droplevels(subset(dat_ade, sex == "female"))
t.test(dat_ade_f$body_mass_g,mu = 0)
#male Adelie penguins have a mean body mass greater than 4000 grams
dat_ade_m = droplevels(subset(dat_ade, sex == "male"))
t.test(dat_ade_m$body_mass_g, mu = 4000, alternative = "greater")
#two-sample t-test of the alternative hypothesis that male and female Adelie penguins have different mean body masses. Show your r-code.
t.test(x = dat_ade_m$body_mass_g, y = dat_ade_f$body_mass_g)
#two-sample (one-tailed) t-test of the directional alternative hypothesis that male Adelie penguins are heavier than females.
t.test(x = dat_ade_m$body_mass_g, y = dat_ade_f$body_mass_g, alternative = "greater")
#directional alternative hypothesis that male Adelie penguins are lighter than females
t.test(x = dat_ade_m$body_mass_g, y = dat_ade_f$body_mass_g, alternative = "l")
data(iris)
fit_species =
lm(
Sepal.Length ~ Species, data = iris
)
plot(
Sepal.Length ~ Species, data = iris,
xlab = "Species", ylab = "Sepal Length (cm)"
)
summary(fit_species)
shapiro.test(residuals(fit_species))
plot(
Petal.Width ~ Petal.Length, data = iris, xlab = "Petal Len", ylab = "Petal Wid"
)
fit_petals =
lm(
Petal.Width ~ Petal.Length, data = iris
)
summary(fit_petals)
shapiro.test(residuals(fit_petals))
require("here")
ginkgo.dat = read.csv(here("data", "ginkgo_data_2022.csv"))
ginkgo.dat
knitr::opts_chunk$set(echo = TRUE)
t.test(subset(penguins, species == "Gentoo")$flipper_length_mm)
require(palmerpenguins)
t.test(subset(penguins, species == "Gentoo")$flipper_length_mm)
require(palmerpenguins)
t.test(subset(penguins, species == "Gentoo")$flipper_length_mm)
t.test(
x = subset(penguins, species == "Gentoo")$flipper_length_mm,
mu = 218
)
require(palmerpenguins)
t.test(subset(penguins, species == "Gentoo")$flipper_length_mm)
t.test(
x = subset(penguins, species == "Gentoo")$flipper_length_mm,
mu = 218
)
t.test(
x = subset(penguins, species == "Gentoo")$flipper_length_mm,
mu = 218,
alternative = "less"
)
knitr::opts_chunk$set(echo = TRUE)
require(palmerpenguins)
t.test(subset(penguins, species == "Gentoo")$flipper_length_mm)
t.test(
x = subset(penguins, species == "Gentoo")$flipper_length_mm,
mu = 218
)
t.test(
x = subset(penguins, species == "Gentoo")$flipper_length_mm,
mu = 218,
alternative = "less"
)
# 2-sample t-test
t.test(flipper_length_mm ~ species, data = subset(penguins, species != "Chinstrap"))
t.test(flipper_length_mm ~ species, data = subset(penguins, species != "Chinstrap"), alternative = "smaller")
t.test(flipper_length_mm ~ species, data = subset(penguins, species != "Chinstrap"), alternative = "less")
t.test(flipper_length_mm ~ species, data = subset(penguins, species != "Chinstrap"), alternative = "more")
t.test(flipper_length_mm ~ species, data = subset(penguins, species != "Chinstrap"), alternative = "greater")
t.test(flipper_length_mm ~ species, data = subset(penguins, species != "Chinstrap"), alternative = "less")
par(mfrow = c(1, 2))
hist(penguins$body_mass_g, breaks = 80, main = "histogram of body mass", xlab = "body mass (g)")
plot(density(penguins$body_mass_g, na.rm = TRUE), main = "density plot of body mass")
#explore normality using histograms and density plots
par(mfrow = c(1, 2))
hist(penguins$body_mass_g, breaks = 80, main = "histogram of body mass", xlab = "body mass (g)")
plot(density(penguins$body_mass_g, na.rm = TRUE), main = "density plot of body mass")
boxplot(body_mass_g ~ species, data = penguins)
boxplot(body_mass_g ~ species + sex, data = penguins)
boxplot(body_mass_g ~ sex + species, data = penguins)
boxplot(body_mass_g ~ species, data = penguins)
boxplot(body_mass_g ~ sex + species, data = penguins, names(female))
boxplot(body_mass_g ~ sex + species, data = penguins, names("female"))
boxplot(body_mass_g ~ sex + species, data = penguins, names("male"))
boxplot(body_mass_g ~ sex + species, data = penguins, names("malesklfjaphidsf"))
boxplot(body_mass_g ~ sex + species, data = penguins)
?names
names(islands)
names(boxplot(body_mass_g ~ sex + species, data = penguins))
names(sex + species)
boxplot(body_mass_g ~ sex + species, data = penguins)
boxplot(body_mass_g ~ sex + species, data = penguins,ylab = "Body Mass (g)")
boxplot(body_mass_g ~ sex + species, data = penguins,ylab = "Body Mass (g)", xlab = FALSE)
boxplot(body_mass_g ~ sex + species, data = penguins,ylab = "Body Mass (g)", xlab = None)
boxplot(body_mass_g ~ sex + species, data = penguins,ylab = "Body Mass (g)")
boxplot(body_mass_g ~ sex + species, data = penguins,ylab = "Body Mass (g)",xlab = names(c("female","male")))
?boxplot
ddf = structure(list(apple = c(1, 2, 3, 4, 5), banana = c(5, 4, 3,
2, 1), watermelon = c(4, 5, 6, 7, 8)), .Names = c("apple", "banana",
"watermelon"), row.names = c(NA, -5L), class = "data.frame")
View(ddf)
View(ddf)
xlabel=c("female\nAdelie")
boxplot(body_mass_g ~ sex + species, data = penguins,ylab = "Body Mass (g)",names = xlabel)
xlabel=c("female\nAdelie","2","3","4","5","6")
xlabel=c("female\nAdelie","2","3","4","5","6")
boxplot(body_mass_g ~ sex + species, data = penguins,ylab = "Body Mass (g)",names = xlabel)
xlabel=c("female\nAdelie","male\nAdelie","female\nChinstrap","male\nChinstrap","female\nGentoo","male\nGentoo")
boxplot(body_mass_g ~ sex + species, data = penguins,ylab = "Body Mass (g)",names = xlabel)
dat_chinstrap = subset(penguins, species == "Chinstrap")
mean(dat_chinstrap$body_mass_g, na.rm = TRUE)
dat_chinstrap = subset(penguins, species == "Chinstrap")
mean(dat_chinstrap$body_mass_g, na.rm = TRUE)
shapiro.test(dat_chinstrap$body_mass_g)
aggregate(body_mass_g ~ species, data = penguins, FUN = mean)
aggregate(
body_mass_g ~ species,
data = penguins,
FUN = function(x) shapiro.test(x)$p.value)
fit_species = lm(body_mass_g ~ species, data = penguins)
fit_species = lm(body_mass_g ~ species, data = penguins)
summary(fit_species)
anova(fit_species)
fit_species = lm(body_mass_g ~ species, data = penguins)
summary(fit_species)
anova(fit_species)
knitr::opts_chunk$set(echo = TRUE)
#whether Gentoo penguin flipper lengths are equal to 0 mm
require(palmerpenguins)
t.test(subset(penguins, species == "Gentoo")$flipper_length_mm)
#whether Gentoo penguin flipper lengths are equal to 218 mm
t.test(
x = subset(penguins, species == "Gentoo")$flipper_length_mm,
mu = 218
)
#whether Gentoo penguin flipper lengths are smaller than 218 mm
t.test(
x = subset(penguins, species == "Gentoo")$flipper_length_mm,
mu = 218,
alternative = "less"
)
# 2-sample t-test
t.test(flipper_length_mm ~ species, data = subset(penguins, species != "Chinstrap"))
#Adelie penguins have shorter than Gentoo penguins
t.test(flipper_length_mm ~ species, data = subset(penguins, species != "Chinstrap"), alternative = "less")
#explore normality using histograms and density plots
par(mfrow = c(1, 2))
hist(penguins$body_mass_g, breaks = 80, main = "histogram of body mass", xlab = "body mass (g)")
plot(density(penguins$body_mass_g, na.rm = TRUE), main = "density plot of body mass")
boxplot(body_mass_g ~ species, data = penguins)
dat_chinstrap = subset(penguins, species == "Chinstrap")
mean(dat_chinstrap$body_mass_g, na.rm = TRUE)
shapiro.test(dat_chinstrap$body_mass_g)
aggregate(body_mass_g ~ species, data = penguins, FUN = mean)
aggregate(
body_mass_g ~ species,
data = penguins,
FUN = function(x) shapiro.test(x)$p.value)
fit_species = lm(body_mass_g ~ species, data = penguins)
summary(fit_species)
anova(fit_species)
xlabel=c("female\nAdelie","male\nAdelie","female\nChinstrap","male\nChinstrap","female\nGentoo","male\nGentoo")
boxplot(body_mass_g ~ sex + species, data = penguins,ylab = "Body Mass (g)",names = xlabel)
boxplot(body_mass_g ~ species, data = penguins)
fit_additive = lm(body_mass_g ~ sex + species, data = penguins)
fit_additive = lm(body_mass_g ~ sex + species, data = penguins)
fit_additive = lm(body_mass_g ~ sex + species, data = penguins)
fit_additive
fit_interactive = lm(body_mass_g ~ sex * species, data = penguins)
fit_interactive
fit_interactive = lm(body_mass_g ~ sex * species, data = penguins)
fit_interactive
fit_interactive = lm(body_mass_g ~ sex * species, data = penguins)
anova(fit_interactive)
fit_interactive = lm(body_mass_g ~ sex * species, data = penguins)
summary(fit_interactive)
anova(fit_interactive)
fit_interactive = lm(body_mass_g ~ sex * species, data = penguins)
fit_interactive
summary(fit_interactive)
anova(fit_interactive)
fit_both = lm(body_mass_g ~ sex * species, data = penguins)#This line of code is the answer
#These are supplementary codes
fit_both
summary(fit_both)
anova(fit_both)
fit_both = lm(body_mass_g ~ sex * species, data = penguins)#This line of code is the answer
#These are supplementary codes
fit_both
summary(fit_both)
anova(fit_both)
fit_both = lm(body_mass_g ~ sex * species, data = penguins)#This line of code is the answer
#These are supplementary codes
fit_both
summary(fit_both)
anova(fit_both)
lm(bill_length_mm ~ body_mass_g, data = penguins)
fit_both = lm(body_mass_g ~ sex * species, data = penguins)#This line of code is the answer
summary(fit_both)
fit_additive = lm(body_mass_g ~ sex + species, data = penguins)
summary(fit_additive)
3372.39+26.92
fit_additive = lm(body_mass_g ~ sex + species, data = penguins)
summary(fit_additive)
aggregate(body_mass_g ~ sex*species, data = penguins, FUN = mean)
-1.7 + 0.043 * 10 + 0.192* 30 - 0.027 * 20
knitr::opts_chunk$set(echo = TRUE)
# load the here and palmerpenguins packages using library()
library(here, palmerpenguins)
# R Reference Guide {.tabset .tabset-pills}
Some shortcut:
library(palmerpenguins)
require(palmerpenguins)
# load the here and palmerpenguins packages using require()
require(here)
# create a data frame using here() and read.csv
#ginkgo = read.csv(here())
# create a data frame using here() and read.csv
#ginkgo = read.csv(here())
here()
here()
# create a data frame using here() and read.csv
ginkgo = read.csv(here("data", "ginkgo_data_2022.csv"))
?c()
my_vec[my_bool_vec]
Vec_4 = c(1:12)
mat_1 = matrix(Vec_4, nrow = 3, byrow = TRUE)
mat_2 = matrix(Vec_4, nrow = 3)
Vec_4 = c(1:12)
mat_1 = matrix(Vec_4, nrow = 3, byrow = TRUE)
mat_2 = matrix(Vec_4, nrow = 3)
mat_1
my_vec = rep(1:3, 5)
my_vec
my_bool_vec = my_vec == 3
data.frame(my_vec, my_bool_vec)
my_vec[my_bool_vec]
nrow(ginkgo)
nrow(ginkgo)
ncol(ginkgo)
dim(ginkgo)
here()
# create a data frame using here() and read.csv
ginkgo = read.csv(here("data", "ginkgo_data_2022.csv"))
ginkgo
data.frame(mat_1)
## The print() function accomplishes the same task:
print(char_vec)
## Create a vector of numbers:
num_vec  = c(1, 4, 8, 9, 13)
## Create a vector of characters:
char_vec = c("a", "fish", "data is cool")
## Typing the name of the vector into the console prints the contents
num_vec
## The print() function accomplishes the same task:
print(char_vec)
length(num_vec)
length(char_vec)
#making a vector that contains integers from 1 to 12
Vec_4 = c(1:12)
mat_1 = matrix(Vec_4, nrow = 3, byrow = TRUE)
mat_2 = matrix(Vec_4, nrow = 3)
mat_1
mat_2
?byrow
?matrix()
data.frame(ginkgo)
#nrow() and ncol() return the number of rows and columns of a data frame. dim() return the dimention of the data frame.
nrow(ginkgo)
ncol(ginkgo)
dim(ginkgo)
ginkgo$site_id
ginkgo$max_width
?[]
ginkgo[2,3]
ginkgo[1]
ginkgo[,1]
ginkgo[1,1]
ginkgo[1,1]
ginkgo[2,3]
ginkgo[3,]
ginkgo[1,]
ginkgo[2,3]
ginkgo[,3]
ginkgo[1,]
ginkgo[2,3]
ginkgo[3]
subset(penguins, Adelie)
?subset
subset(penguins, species == Adelie)
penguins
subset(penguins, species == Adelie)
penguins
subset(penguins, species == "Adelie")
summary(ginkgo)
summary(ginkgo)
summary(ginkgo$max_width)
summary(ginkgo$max_width)
summary(ginkgo$max_width)
mean(ginkgo$max_width)
sd(ginkgo$max_width)
plot(ginkgo$max_width, ginkgo$max_depth)
plot(ginkgo$max_width, ginkgo$max_depth,
col = 1)
?plot
plot(ginkgo$max_width, ginkgo$max_depth,
col = "red", # the color of the plot
plot(ginkgo$max_width, ginkgo$max_depth,
col = "red", # the color of the plot)
plot(ginkgo$max_width, ginkgo$max_depth,
col = "red" # the color of the plot)
plot(ginkgo$max_width, ginkgo$max_depth,
col = "red" )
?plot
plot(ginkgo$max_depth, ginkgo$max_width,
col = "red",
pch = 1,
cex = 1,
main = "maximum leaf depth vs. maximum leaf width in gonkgo leaves")
plot(ginkgo$max_depth, ginkgo$max_width,
col = "red",
pch = 1,
cex = 1,
main = "maximum leaf depth vs. maximum leaf width in gonkgo leaves",
xlab = "max ginkgo depth",
ylab = "max ginkgo width",
xlim =95,
ylim = 125)
plot(ginkgo$max_depth, ginkgo$max_width,
col = "red",
pch = 1,
cex = 1,
main = "maximum leaf depth vs. maximum leaf width in gonkgo leaves",
xlab = "max ginkgo depth",
ylab = "max ginkgo width",
xlim = 95,
ylim = 125)
plot(ginkgo$max_depth, ginkgo$max_width,
col = "red",
pch = 1,
cex = 1,
main = "maximum leaf depth vs. maximum leaf width in gonkgo leaves",
xlab = "max ginkgo depth",
ylab = "max ginkgo width",
xlim = NULL,
ylim = NULL)
?plot
plot(ginkgo$max_depth, ginkgo$max_width,
col = "red",
pch = 1,
cex = 1,
main = "maximum leaf depth vs. maximum leaf width in gonkgo leaves",
xlab = "max ginkgo depth",
ylab = "max ginkgo width",
xlim = (20, 95),
plot(ginkgo$max_depth, ginkgo$max_width,
col = "red",
pch = 1,
cex = 1,
main = "maximum leaf depth vs. maximum leaf width in gonkgo leaves",
xlab = "max ginkgo depth",
ylab = "max ginkgo width",
xlim = c(20, 95),
ylim = c(20, 125))
plot(ginkgo$max_depth, ginkgo$max_width,
col = "red",
pch = 5,
cex = 1,
main = "maximum leaf depth vs. maximum leaf width in gonkgo leaves",
xlab = "max ginkgo depth",
ylab = "max ginkgo width",
xlim = c(20, 95),
ylim = c(20, 125))
plot(ginkgo$max_depth, ginkgo$max_width,
col = "red",
pch = 2,
cex = 1,
main = "maximum leaf depth vs. maximum leaf width in gonkgo leaves",
xlab = "max ginkgo depth",
ylab = "max ginkgo width",
xlim = c(20, 95),
ylim = c(20, 125))
plot(ginkgo$max_depth, ginkgo$max_width,
col = "red",
pch = 2,
cex = 0.8,
main = "maximum leaf depth vs. maximum leaf width in gonkgo leaves",
xlab = "max ginkgo depth",
ylab = "max ginkgo width",
xlim = c(20, 95),
ylim = c(20, 125))
plot(ginkgo$max_depth, ginkgo$max_width,
col = "red",
pch = 2,
cex = 1.5,
main = "maximum leaf depth vs. maximum leaf width in gonkgo leaves",
xlab = "max ginkgo depth",
ylab = "max ginkgo width",
xlim = c(20, 95),
ylim = c(20, 125))
plot(ginkgo$max_depth, ginkgo$max_width,
col = "red",
pch = 2,
cex = 0.4,
main = "maximum leaf depth vs. maximum leaf width in gonkgo leaves",
xlab = "max ginkgo depth",
ylab = "max ginkgo width",
xlim = c(20, 95),
ylim = c(20, 125))
plot(ginkgo$max_depth, ginkgo$max_width,
col = "red",
pch = 2,
cex = 0.7,
main = "maximum leaf depth vs. maximum leaf width in gonkgo leaves",
xlab = "max ginkgo depth",
ylab = "max ginkgo width",
xlim = c(20, 95),
ylim = c(20, 125))
hist(penguins$flipper_length_mm)
hist(penguins$flipper_length_mm,
main = "Histogram of Penguin's Flipper Length",
xlab = "Flipper length (mm)")
plot(ginkgo$max_depth, ginkgo$max_width,
col = "green",
pch = 2,
cex = 0.7,
main = "maximum leaf depth vs. maximum leaf width in gonkgo leaves",
xlab = "max ginkgo depth",
ylab = "max ginkgo width",
xlim = c(20, 95),
ylim = c(20, 125))
plot(ginkgo$max_depth, ginkgo$max_width,
col = "yellow",
pch = 2,
cex = 0.7,
main = "maximum leaf depth vs. maximum leaf width in gonkgo leaves",
xlab = "max ginkgo depth",
ylab = "max ginkgo width",
xlim = c(20, 95),
ylim = c(20, 125))
hist(penguins$flipper_length_mm,
main = "Histogram of Penguin's Flipper Length",
xlab = "Flipper length (mm)",
breaks = 170:240 - 10)
hist(penguins$flipper_length_mm,
main = "Histogram of Penguin's Flipper Length",
xlab = "Flipper length (mm)",
breaks = 170:240)
hist(penguins$flipper_length_mm,
main = "Histogram of Penguin's Flipper Length",
xlab = "Flipper length (mm)",
breaks = 170:230)
hist(penguins$flipper_length_mm,
main = "Histogram of Penguin's Flipper Length",
xlab = "Flipper length (mm)",
breaks = 170:235)
hist(penguins$flipper_length_mm,
main = "Histogram of Penguin's Flipper Length",
xlab = "Flipper length (mm)",
breaks = 170:235 - 10)
hist(penguins$flipper_length_mm,
main = "Histogram of Penguin's Flipper Length",
xlab = "Flipper length (mm)",
breaks = 170:245 - 10)
hist(penguins$flipper_length_mm,
main = "Histogram of Penguin's Flipper Length",
xlab = "Flipper length (mm)",
breaks = 170:245 - 5)
hist(penguins$flipper_length_mm,
main = "Histogram of Penguin's Flipper Length",
xlab = "Flipper length (mm)",
breaks = 170:245 - 2)
hist(penguins$flipper_length_mm,
main = "Histogram of Penguin's Flipper Length",
xlab = "Flipper length (mm)",
breaks = 170:245 - 1)
hist(penguins$flipper_length_mm,
main = "Histogram of Penguin's Flipper Length",
xlab = "Flipper length (mm)",
breaks = 170:245 - 11)
hist(penguins$flipper_length_mm,
main = "Histogram of Penguin's Flipper Length",
xlab = "Flipper length (mm)",
breaks = 170:235)
